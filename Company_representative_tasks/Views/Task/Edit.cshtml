@model Argent_Company.Models.Task

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Task</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" class="form-control" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        <form asp-action="MarkDone" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="TaskId" value="@Model.Id" />
            <div class="form-group">
                <label for="CollectionAmount">المبلغ المحصل:</label>
                <input type="number" name="CollectionAmount" id="CollectionAmount" class="form-control" value="@Model.CollectionAmount" required />
            </div>
            <button type="submit" class="btn btn-success">حفظ</button>
            <script>
            document.currentScript.parentElement.addEventListener('submit', function(e) {
                e.preventDefault();
                var form = this;
                var formData = new FormData(form);
                var token = form.querySelector('input[name=__RequestVerificationToken]').value;
                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: { 'X-Requested-With': 'XMLHttpRequest', 'RequestVerificationToken': token }
                })
                .then(async r => {
                    if (r.ok) { return r.json ? r.json() : r.text(); }
                    let msg = await r.text();
                    throw new Error(msg || 'خطأ غير معروف');
                })
                .then(() => { alert('تم الحفظ بنجاح'); })
                .catch(err => { alert('حدث خطأ أثناء الحفظ: ' + err.message); });
            });
            </script>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
